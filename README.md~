# Description
## DOL 框架描述
**Distributed Operation Layer : **
 The distributed operation layer (DOL) is a software development framework to program parallel applications. The DOL allows to specify applications based on the Kahn process network model of computation and features a simulation engine based on SystemC. Moreover, the DOL provides an XML-based specification format to describe the implementation of a parallel application on a multi-processor systems, including binding and mapping.

# How to install
## DOL 安装笔记
* ** 安装一些必要的环境**
``` 
$	sudo apt-get update  
$	sudo apt-get install ant 
$	sudo apt-get install openjdk-7-jdk
$	sudo apt-get install unzip```

* ** 下载文件**
```
sudo wget http://www.accellera.org/images/downloads/standards/systemc/systemc-2.3.1.tgz 
sudo wget http://www.tik.ee.ethz.ch/~shapes/downloads/dol_ethz.zip ```

* ** 解压文件**
新建dol的文件夹:
`$	mkdir dol`
将dolethz.zip解压到 dol文件夹中:
`$	unzip dol_ethz.zip -d dol`
解压systemc:
`$	tar -zxvf systemc-2.3.1.tgz`

* ** 编译systemc**
解压后进入systemc-2.3.1的目录下:
`$	cd systemc-2.3.1`
新建一个临时文件夹objdir:
`$	mkdir objdir`
进入该文件夹objdir:
`$	cd objdir`
运行configure(能根据系统的环境设置一下参数，用于编译):
`$	../configure CXX=g++ --disable-async-updates`
编译:
`$	sudo make install`
记录当前的工作路径(会输出当前所在路径，记下来，待会有用):
`$	pwd`
![路径](1.png)
这里表示我当前的工作路径为 /home/lyc/systemc-2.3.1

* ** 编译dol**
进入刚刚dol的文件夹:
`$	cd ../dol`
修改build_zip.xml文件:
找到下面这段话，就是说上面编译的systemc位置在哪里，
> property name="systemc.inc" value="YYY/include"/
> property name="systemc.lib" value="YYY/lib-linux/libsystemc.a"/

 把YYY改成pwd的结果（注意，对于64位Ubantu系统的机器，lib-linux要改成lib-linux64）
然后是编译:
`$	sudo ant -f build_zip.xml all`
若成功会显示build successful.<br>
接着可以试试运行第一个例子
进入build/bin/mian路径下:
`$	sudo cd build/bin/main`
然后运行第一个例子:
`$	sudo ant -f runexample.xml -Dnumber=1`
成功结果如图:
![成功结果图](2.png)

# Experimental experience
## 实验感想与心得
因上学期操作系统已安装虚拟机及Ubantu操作系统，这次试验又是基于这样的系统，所以做起来省去了不少麻烦。配置DOL的时候遇到的问题主要是没弄清楚自己Ubantu的位数，改成了64位结果却发现自己的Ubantu是32位，这个坑了我挺久。还有就是最后那几行命令没有加sudo,结果build失败，试了好几次终于醒悟原来是忘加sudo了。以后这些低级错误要尽量避免，不然很浪费时间。

